{"version":3,"file":"menu.component.spec.js","sourceRoot":"","sources":["menu.component.spec.ts"],"names":[],"mappings":";AAAA,wBAOO,uBAAuB,CAAC,CAAA;AAC/B,wBAAuD,2BAA2B,CAAC,CAAA;AACnF,qBAA6C,eAAe,CAAC,CAAA;AAC7D,uBAAkC,iBAAiB,CAAC,CAAA;AACpD,wBAAsC,yBAAyB,CAAC,CAAA;AAChE,+BAA8B,kBAAkB,CAAC,CAAA;AAEjD,kBAAQ,CAAC,iBAAiB,EAAE;IAC1B,IAAI,OAAwC,CAAC;IAE7C,6BAAmB,CAAC,cAAM,OAAA;QACxB,+BAAqB;QACrB,cAAO,CAAC,0BAAmB,EAAE,EAAC,QAAQ,EAAE,0BAAiB,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;KACzE,EAHyB,CAGzB,CAAC,CAAC;IAEH,oBAAU,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EACtC,UAAC,GAAyB,IAAK,OAAA,GAAG,CAAC,WAAW,CAAC,8BAAa,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,OAAO,GAAG,CAAC,EAAX,CAAW,CAAC,EAArD,CAAqD,CACrF,CAAC,CAAC;IAEH,YAAE,CAAC,uCAAuC,EAAE;QAC1C,IAAI,IAAI,GAAkB,IAAI,8BAAa,EAAE,CAAC;QAC9C,gBAAM,CAAC,IAAI,CAAC,eAAe,CAAC;aACzB,IAAI,CAAC,IAAI,EAAE,0DAA0D;YACpE,kEAAkE,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,qCAAqC,EAAE;QACxC,IAAI,IAAI,GAAkB,IAAI,8BAAa,EAAE,CAAC;QAC9C,gBAAM,CAAC,IAAI,CAAC,YAAY,CAAC;aACtB,GAAG,CAAC,aAAa,CAAC,uDAAuD,CAAC,CAAC;QAE9E,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,gBAAM,CAAC,IAAI,CAAC,eAAe,CAAC;aACzB,IAAI,CAAC,KAAK,EAAE,sEAAsE,CAAC,CAAC;QAEvF,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,gBAAM,CAAC,IAAI,CAAC,eAAe,CAAC;aACzB,IAAI,CAAC,IAAI,EAAE,sEAAsE,CAAC,CAAC;IACxF,CAAC,CAAC,CAAC;IAEH,YAAE,CAAC,kCAAkC,EAAE;QACrC,IAAI,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;QAEpC,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC9C,gBAAM,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;QAE1C,IAAI,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAEzC,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAC1C,gBAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {\n  beforeEach,\n  beforeEachProviders,\n  describe,\n  expect,\n  it,\n  inject\n} from '@angular/core/testing';\nimport { ComponentFixture, TestComponentBuilder } from '@angular/compiler/testing';\nimport { provide, PLATFORM_DIRECTIVES } from '@angular/core';\nimport { ROUTER_DIRECTIVES } from '@angular/router';\nimport { ROUTER_FAKE_PROVIDERS } from '@angular/router/testing';\nimport { MenuComponent } from './menu.component';\n\ndescribe('Component: Menu', () => {\n  let fixture: ComponentFixture<MenuComponent>;\n\n  beforeEachProviders(() => [\n    ROUTER_FAKE_PROVIDERS,\n    provide(PLATFORM_DIRECTIVES, {useValue: ROUTER_DIRECTIVES, multi: true})\n  ]);\n\n  beforeEach(inject([TestComponentBuilder],\n    (tcb: TestComponentBuilder) => tcb.createAsync(MenuComponent).then(f => fixture = f)\n  ));\n\n  it('should have a `navbarCollapsed` field', () => {\n    let menu: MenuComponent = new MenuComponent();\n    expect(menu.navbarCollapsed)\n      .toBe(true, 'Check that `navbarCollapsed` is initialized with `true`.' +\n        'Maybe you forgot to declare `navbarCollapsed` in your component.');\n  });\n\n  it('should have a `toggleNavbar` method', () => {\n    let menu: MenuComponent = new MenuComponent();\n    expect(menu.toggleNavbar)\n      .not.toBeUndefined('Maybe you forgot to declare a `toggleNavbar()` method');\n\n    menu.toggleNavbar();\n\n    expect(menu.navbarCollapsed)\n      .toBe(false, '`toggleNavbar()` should change `navbarCollapsed` from true to false`');\n\n    menu.toggleNavbar();\n\n    expect(menu.navbarCollapsed)\n      .toBe(true, '`toggleNavbar()` should change `navbarCollapsed` from false to true`');\n  });\n\n  it('should toggle the class on click', () => {\n    let element = fixture.nativeElement;\n\n    fixture.detectChanges();\n\n    let navbar = element.querySelector('#navbar');\n    expect(navbar).toHaveCssClass('collapse');\n\n    let button = element.querySelector('button');\n    button.dispatchEvent(new Event('click'));\n\n    fixture.detectChanges();\n\n    navbar = element.querySelector('#navbar');\n    expect(navbar).not.toHaveCssClass('collapse');\n  });\n});\n"]}